{"version":3,"file":"static/js/232.fb8dc616.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/tweets/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/Cards/Cards.styled.jsx","components/Cards/Cards.jsx","pages/Tweets.jsx"],"sourcesContent":["export const selectFilter = state => state.filters.value;\n","export const selectAllTweets = state => state.tweets.items;\nexport const selectFollowers = state => state.tweets.followers;\nexport const selectLoading = state => state.tweets.isLoading;\n","import styled from '@emotion/styled';\n\nexport const Find = styled.div`\n  display: flex;\n  gap: 10px;\n  line-height: 0;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/filter/slice';\n\nimport { selectFilter } from 'redux/filter/selectors';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport { Find } from './Filter.styled';\n\nconst Filter = () => {\n  const filterDefault = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    const val = e.target.value;\n    dispatch(setStatusFilter(val));\n  };\n\n  return (\n    <Find>\n      <FormControl variant=\"outlined\" sx={{ minWidth: 200 }}>\n        <InputLabel id=\"filter-label\">Filter</InputLabel>\n        <Select\n          labelId=\"filter-label\"\n          id=\"filter-select\"\n          value={filterDefault}\n          onChange={handleChange}\n          label=\"Filter\"\n        >\n          <MenuItem value=\"All\">show all</MenuItem>\n          <MenuItem value=\"follow\">follow</MenuItem>\n          <MenuItem value=\"followings\">followings</MenuItem>\n        </Select>\n      </FormControl>\n    </Find>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const CardLogo = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const CardPictureThumb = styled.div`\n  margin-bottom: 68px;\n`;\n\nexport const CardRowLine = styled.div`\n  position: absolute;\n  top: 214px;\n  left: 0px;\n\n  width: 380px;\n  height: 8px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const CardAvatar = styled.img`\n  position: absolute;\n  top: 178px;\n  left: 50%;\n  transform: translateX(-50%);\n\n  border: 8px solid #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n  border-radius: 50%;\n`;\n\nexport const CardUserName = styled.span`\n  margin-bottom: 10px;\n\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nexport const CardTweetThumb = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const CardFollowThumb = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const CardText = styled.span`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nexport const CardBtn = styled.button`\n  padding: 14px 0;\n\n  width: 196px;\n  height: 50px;\n\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: #373737;\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #373737;\n    background-color: #5cd3a8;\n  }\n`;\n\nexport const CardBtnFollowing = styled.button`\n  padding: 14px 0;\n\n  width: 196px;\n  height: 50px;\n\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: #373737;\n  background-color: #5cd3a8;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #373737;\n    background-color: #ebd8ff;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { followTweet, unFollowTweet } from 'redux/tweets/operations';\nimport { selectFollowers } from 'redux/tweets/selectors';\n\nimport {\n  CardLogo,\n  CardPictureThumb,\n  CardRowLine,\n  CardAvatar,\n  CardUserName,\n  CardTweetThumb,\n  CardFollowThumb,\n  CardText,\n  CardBtn,\n  CardBtnFollowing,\n} from 'components/Card/Card.styled';\n\nimport logo from 'components/Card/logo.png';\nimport cardPicture from './cardPicture.png';\nimport avatarDefault from './avatarDefault.png';\n\nconst Card = ({ tweet }) => {\n  const dispatch = useDispatch();\n  const myFollowers = useSelector(selectFollowers);\n  const isFollower = myFollowers.includes(Number(tweet.id));\n\n  return (\n    <>\n      <CardLogo\n        src={logo}\n        width=\"76\"\n        height=\"22\"\n        aria-label=\"Іконка компанії GoIT\"\n      />\n      <CardPictureThumb>\n        <img\n          src={cardPicture}\n          alt=\"Зображення питання-відповідь\"\n          width=\"308\"\n          height=\"168\"\n        />\n      </CardPictureThumb>\n      <CardRowLine />\n      <CardAvatar\n        src={!tweet.avatar ? avatarDefault : tweet.avatar}\n        width=\"80\"\n        height=\"80\"\n        alt=\"Аватар користувача\"\n      />\n      <CardUserName>{tweet.user}</CardUserName>\n      <CardTweetThumb>\n        <CardText>{tweet.tweets}</CardText>\n        <CardText>tweets</CardText>\n      </CardTweetThumb>\n      <CardFollowThumb>\n        <CardText>{tweet.followers}</CardText>\n        <CardText>Followers</CardText>\n      </CardFollowThumb>\n\n      {isFollower ? (\n        <CardBtnFollowing\n          onClick={() => {\n            dispatch(unFollowTweet(tweet));\n          }}\n        >\n          Following\n        </CardBtnFollowing>\n      ) : (\n        <CardBtn\n          onClick={() => {\n            dispatch(followTweet(tweet));\n          }}\n        >\n          Follow\n        </CardBtn>\n      )}\n    </>\n  );\n};\n\nexport default Card;\n","import styled from '@emotion/styled';\n\nexport const CardsListWrapper = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  width: 100%;\n\n  list-style: none;\n`;\n\nexport const CardItemWrapper = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 28px 36px;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n","import Card from 'components/Card/Card';\n\nimport {\n  CardsListWrapper,\n  CardItemWrapper,\n} from 'components/Cards/Cards.styled';\n\nconst Cards = ({ filteredTweets, visibleTweets }) => {\n  return (\n    <CardsListWrapper>\n      {filteredTweets.slice(0, visibleTweets).map(tweet => (\n        <CardItemWrapper key={tweet.id}>\n          <Card tweet={tweet} />\n        </CardItemWrapper>\n      ))}\n    </CardsListWrapper>\n  );\n};\n\nexport default Cards;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchTweets } from 'redux/tweets/operations';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { selectAllTweets, selectFollowers } from 'redux/tweets/selectors';\nimport Filter from 'components/Filter/Filter';\nimport Cards from 'components/Cards/Cards';\n\nimport {\n  TweetsContainer,\n  BackLink,\n  TweetsWrapper,\n  LoadMoreBtn,\n} from '../components/App/App.styled';\n\nconst Tweets = () => {\n  const [visibleTweets, setVisibleTweets] = useState(3);\n  const [isLoadMoreDisabled, setLoadMoreDisabled] = useState(false);\n\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const tweets = useSelector(selectAllTweets);\n  const followers = useSelector(selectFollowers);\n\n  let filteredTweets = tweets;\n\n  if (filter === 'follow') {\n    filteredTweets = tweets.filter(\n      tweet => !followers.includes(Number(tweet.id))\n    );\n  } else if (filter === 'followings') {\n    filteredTweets = tweets.filter(tweet =>\n      followers.includes(Number(tweet.id))\n    );\n  }\n\n  useEffect(() => {\n    dispatch(fetchTweets());\n  }, [dispatch]);\n\n  const handleLoadMore = () => {\n    const newVisibleTweets = Math.min(visibleTweets + 3);\n\n    setVisibleTweets(newVisibleTweets);\n\n    if (newVisibleTweets >= filteredTweets.length) {\n      setLoadMoreDisabled(true);\n    }\n  };\n\n  return (\n    <TweetsContainer>\n      <TweetsWrapper>\n        <BackLink to=\"/\">Back</BackLink>\n        <Filter />\n      </TweetsWrapper>\n      {filteredTweets.length > 0 && (\n        <Cards visibleTweets={visibleTweets} filteredTweets={filteredTweets} />\n      )}\n      <LoadMoreBtn\n        type=\"button\"\n        onClick={handleLoadMore}\n        disabled={isLoadMoreDisabled}\n        style={\n          isLoadMoreDisabled ? { opacity: 0.5, cursor: 'not-allowed' } : null\n        }\n      >\n        Load More\n      </LoadMoreBtn>\n    </TweetsContainer>\n  );\n};\n\nexport default Tweets;\n"],"names":["selectFilter","state","filters","value","selectAllTweets","tweets","items","selectFollowers","followers","Find","styled","filterDefault","useSelector","dispatch","useDispatch","FormControl","variant","sx","minWidth","InputLabel","id","Select","labelId","onChange","e","val","target","setStatusFilter","label","MenuItem","CardLogo","CardPictureThumb","CardRowLine","CardAvatar","CardUserName","CardTweetThumb","CardFollowThumb","CardText","CardBtn","CardBtnFollowing","tweet","isFollower","includes","Number","src","width","height","cardPicture","alt","avatar","avatarDefault","user","onClick","unFollowTweet","followTweet","CardsListWrapper","CardItemWrapper","filteredTweets","visibleTweets","slice","map","useState","setVisibleTweets","isLoadMoreDisabled","setLoadMoreDisabled","filter","useEffect","fetchTweets","to","length","type","newVisibleTweets","Math","min","disabled","style","opacity","cursor"],"sourceRoot":""}